digraph finite_state_machine {
  node [shape = rectangle];
  graph [splines=ortho];

  root[label = "Expose partner adultery (Client access)",shape=AND];


    compromise_client[label="Compromise client", shape=OR];
    root->compromise_client;
    extractDataFromClient[label="Withdraw consumption and device data"];
    gainRemoteAccessToClient[label="Gain remote access to client"]
    compromise_client -> extractDataFromClient, gainRemoteAccessToClient;

  surveil[label="Surveil partner",shape=OR];
  root->surveil;

    at_home[label="When is the partner at home?"];
    surveil->at_home

      running_devices[label="Monitor devices"];
      at_home->running_devices;

    doing_what[label="What is the partner doing?",shape=OR];
    surveil->doing_what;

      running_devices2[label="Look at what devices are currently being used"];
      doing_what->running_devices2;

      scheduled_devices[label="Look at what devices are scheduled"];
      doing_what->scheduled_devices;

  revenge[label="Get revenge",shape=OR];
  root->revenge;

    turn_onoff[label="Turn devices on/off"];
    revenge->turn_onoff;

    modify_schedules[label="Modify schedules"];
    revenge->modify_schedules;
}
