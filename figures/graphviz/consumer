digraph G {

// graph[ center=true, margin=0.2, nodesep=0.1, ranksep=0.3]
node[ shape=rectangle]
// edge[arrowsize=0.6, arrowhead=vee]

root [label="Report low power consumption", shape=OR];
complaint [label="File complaint against distributor",shape=OR];
falsify [label="Falsify sent consumption",shape=OR];



//COMPLAINT SUBTREE
root -> complaint;

app[label="Develop app that shows \nlower power consumption"];
complaint ->  app;

falsifyReceived[label="Falsify received price info",shape=AND];
complaint -> falsifyReceived;
interceptReceived[label="Incercept received packages \nwith price data"];
falsifyReceived -> interceptReceived;
falsifyReceived -> modifyPrices;
falsifyReceived -> resendToSM;


//FALSIFY SUBTREE
root -> falsify;

package[label="Falsify consumption \npackages sent from SM",shape=AND];
falsify ->	package;
intercept[label="Incercept sent packages \nwith consumption data"];
package -> intercept;
package -> modify;
package -> resend;

DPA[label="Differential Power \nAnalysis",shape=AND]
falsify -> DPA;
DPA -> obtainKey;
whenSend[label="Investigate when SM \nsends consumption data"];
obtainKey[label="Obtain key used by \nSM for communication",shape=AND]
obtainKey -> whenSend;
obtainKey -> performDPA;
obtainKey -> findKeyInDPA;
DPA -> createFalseConsumptionData;
DPA -> sendFalseData;

ModifyFWstore[label="Modify how firmware \nstores consumption"];
falsify -> ModifyFWstore;


ModifyFWsend[label="Modify how firmware \nsends consumption"];
falsify -> ModifyFWsend;





}